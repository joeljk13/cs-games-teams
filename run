#!/usr/bin/env zsh

set -e

NUM_PEOPLE=20
NUM_CATS=15

PEOPLE="Jackson Gianna Ben Brandon Alan Nathan Daniel Colin Shir Xiaoya Shengbo Will Shuyang Pandrew Jason Yutong Yujie Zach Michaela Joel"

CATS="os embedded relay sport ai functional ml security swe theory mirego bell olympus cse-cts ALL"

NUM_PEOPLE=$(echo $PEOPLE | wc -w)
NUM_CATS=$(echo $CATS | wc -w)

num_to_ptc()
{
    num=$(($1 - 1))
    cat=$(($num % $NUM_CATS))
    num=$(($num / $NUM_CATS))
    team=$(($num % 2))
    num=$(($num / 2))
    person=$num

    # echo x${person}_${team}_${cat}
    out="$(echo $PEOPLE | cut -d " " -f $(($person + 1))) $team "
    out="$out $(echo $CATS | cut -d " " -f $(($cat + 1)))"
    echo $out
}

./cs.py >INPUT
./mps.py <INPUT >MPS
glpsol -w OUTPUT MPS

count=0
while read c var value; do
    if [ $c != j ]; then
        continue
    fi

    num_to_ptc $var | read person team cat

    echo $var $person $team $cat $value

    if [ $team = 0 ]; then
        if ! grep -q $person <<<$team0; then
            team0+="$person "
        fi
    else
        if ! grep -q $person <<<$team1; then
            team1+="$person "
        fi
    fi

    if [ $value = 1 ]; then
        count=$(($count + 1))
    fi
done <OUTPUT >RAW_DATA

awk '$5 == "1" && $4 != "ALL"' RAW_DATA >DATA

echo Team 0: $(awk '$3 == "0" {print $2}' DATA | sort -u) >INFO
echo >>INFO
echo Team 1: $(awk '$3 == "1" {print $2}' DATA | sort -u) >>INFO
echo >>INFO

for p in ${=PEOPLE}; do
    echo $p: $(awk "\$2 == \"$p\" {print \$4}" DATA | sort -u)
done >>INFO
echo >>INFO

for cat in ${=CATS}; do
    if [ $cat = ALL ]; then
        continue
    fi
    echo $cat:
    awk '$4 == "'$cat'" {printf "(%s) %s\n", $3, $2}' DATA | sort -u
done >>INFO

echo $count

cat INFO
